*info.txt*   Read and browse info files in Vim

                                                                    *info.vim*
                   _        __            _           ~
                  (_)_ __  / _| _____   _(_)_ __ ___  ~
                  | | '_ \| |_ / _ \ \ / / | '_ ` _ \ ~
                  | | | | |  _| (_) \ V /| | | | | | |~
                  |_|_| |_|_|  \___(_)_/ |_|_| |_| |_|~


Version: 0.1.0
Author: Alejandro "HiPhish" Sanchez
License: MIT License



==============================================================================
TABLE OF CONTENTS                                              *info-contents*

    1. Introduction ..................................... |info-introduction|
    2. Setup and Configuration .......................... |info-configuration|
    3. Variables ........................................ |info-variables|
    4. Key mappings ..................................... |info-mappings|
    5. Commands ......................................... |info-commands|
    6. Advanced ......................................... |info-advanced|



==============================================================================
INTRODUCTION                                               *info-introduction*

*Info.vim* provides basic file type support for info files,  as well  as an info
document browser. You can open any info file and browse its nodes as you could
in the standalone command-line program or Emacs's info mode.

Note  Info.vim is still very early work; it is feature-complete but you should
      consider it to be "wet paint" at this point.

You can read the info document for a topic like `bash` by executing `:Info`:
>
    :Info bash
<
An alternative way  of loading an info document  is to give an |info-uri| as the
file name:
>
    :edit info://bash
<
You can use your  regular Vim motions to  navigate the buffer,  but since info
documents can get very  large you will want to use node-based navigation.  See
the |info-functions| section for an overview.



==============================================================================
CONFIGURATION                                             *info-configuration*

Info is installed like any other Vim plugin.  After installing you can set the
info binary  for processing  info files via  the |g:infoprg| variable.  You need
at least GNU info version 1.6.

You can  use |info-commands| for navigation,  but if you  want more  comfortable
controls similar to standalone info you should look into the |info-mappings|.



==============================================================================
VARIABLES                                                     *info-variables*

g:infoprg                                                          *g:infoprg*
Default: 'info'~

    Name or path to the standalone GNU info program. You need at least version
    6.0, so you can use this variable to override your system's default info.


------------------------------------------------------------------------------
b:info                                                                *b:info*
                                               *b:info['File']* *b:info['Node']*
                                      *b:info['Up']* *b:info[Next]* *b:info[Prev]*

    Dictionary describing a number of properties of the current node. Use this
    for scripting. Most of it is reflecting the node header:

    b:info['File']~
	Name of the info file (document).
    b:info['Up']~
	Name of the current node.
    b:info['Up']~
	Name of the parent node.
    b:info['Next']~
	Name of the next node.
    b:info['Prev']~
	Name of the previous node.

    Not all of these keys have to be present in a node. There is also a number
    of extra keys which warrant a more detailed explanation.


------------------------------------------------------------------------------
b:info['Menu']                                                *b:info['Menu']*

    A list of menu item entries, each entry is an |info-reference| dictionary.

    Note  The menu is built lazily, it will not exists until executing a menu-
          related command.


------------------------------------------------------------------------------
b:info['XRefs']                                              *b:info['XRefs']*

    A  list  of  cross-reference  entries,  each  entry  is an  |info-reference|
    dictionary.



==============================================================================
KEY MAPPINGS                                                   *info-mappings*

g?                                                                   *info-g?*

    Print a quick overview of the commands.


K                                                                     *info-K*
CTRL-]                                                           *info-CTRL-]*

    Follow the reference under the cursor. Works for cross-references and menu
    items.


------------------------------------------------------------------------------
<Plug>(InfoUp)                                                *<Plug>(InfoUp)*

    Go to the parent node. See also `:UpNode`.


<Plug>(InfoNext)                                            *<Plug>(InfoNext)*

    Go to the next node. See also `:NextNode`.


<Plug>(InfoPrev)                                            *<Plug>(InfoPrev)*

    Go to the previous node. See also `:PrevNode`.


<Plug>(InfoMenu)                                            *<Plug>(InfoMenu)*

    Display a menu prompt, similar to standalone info's `m`. See also `:Menu`.


<Plug>(InfoFollow)                                        *<Plug>(InfoFollow)*

    Display a cross-reference  following prompt,  similar to standalone info's
    `f`.  See also `:Follow`.  If no argument  is given the first cross-reference
    is followed.


<Plug>(InfoGoto)                                            *<Plug>(InfoGoto)*

    Display a node prompt, similar to standalone info's `g`. See also `:GotoNode`.



==============================================================================
COMMANDS                                                       *info-commands*

:Info {file} [{node}]                                                  *:Info*

    Open the {file} document  in an info buffer.  `:Info` accepts command |<mods>| 
    such as `:vertical` or `:topleft`. See also |info-uri|.

    If an optional  {node} argument is  given the document  will jump to  that
    node. Keep in mind that spaces have to be escaped:
>
        " Wrong
        :Info bash 'What is Bash?'
        " Correct
        :Info bash What\ is\ Bash?
<

------------------------------------------------------------------------------
:UpNode                                                         *info-:UpNode*

    Go to the parent node of the current node.


:NextNode                                                     *info-:NextNode*

    Go to the next node of the current node.


:PrevNode                                                     *info-:PrevNode*

    Go to the previous node of the current node.


------------------------------------------------------------------------------
:Menu [{entry}]                                                   *info-:Menu*

    With no argument  open the location  list populated with  the menu entries
    for the  current node.  With an argument  jump to that node.  The argument
    does not have  to be a perfect match,  it only needs to  match at the head
    case-insensitively.


------------------------------------------------------------------------------
:Follow [{xRef}]                                                *info-:Follow*

    Follow the  given cross-reference.  Without argument follow  the reference
    under the cursor. If there is none only a message will be printed.


------------------------------------------------------------------------------
:GotoNode {node}                                              *info-:GotoNode*

    Go to {node} in the current file.



==============================================================================
ADVANCED                                                       *info-advanced*


------------------------------------------------------------------------------
Info references                                               *info-reference*

Reference objects are the fundamental file type in info,  they describe in Vim
terms a link  to another info item,  such as a file or a node.  References are
dictionaries with some or all of the following fields:

    {file}  Info file, not necessarily a physical file
    {node}  Node inside a given file
    {line}  Line number inside a node, counting the node header
    {name}  A human-readable  name of the node,  this is what must be given to
            menu- and cross reference commands

If an entry is  missing there will either  be a default value used  (e.g. line
number 1),  or the  value will  be deduced  from context  (e.g.  if {file}  is
missing use the current file),  or it is an actual error (e.g. menu references
without {name}).


------------------------------------------------------------------------------
Info URI                                                            *info-uri*

If an editor  with an info  URI is edited  the document from  the URI  will be
loaded into the  buffer as if it was  opened with `:Info`.  This would allow you
to open a new window and execute
>
    :edit info://bash
<
and have the manual for  the Bourne Again Shell loaded into the buffer.  There
is absolutely no difference between an info buffer loaded like this and by the
use of `:Info`.

It is possible to specify the node as a path following the host of the URI:
>
    :edit info://bash.info/What%20is%20Bash%3f/
<
Note  We have to  percent-encode reserved  characters like space  and question
      mark.

Additional information  can be included  in the query;  currently only a line-
and column number are supported:
>
    :edit info:/bash.info/What%20is%20Bash%3f/?line=3&column=7
<


==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
