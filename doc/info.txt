*info.txt*   Read and browse info files in Vim

                                                                    *info.vim*
                   _        __            _           ~
                  (_)_ __  / _| _____   _(_)_ __ ___  ~
                  | | '_ \| |_ / _ \ \ / / | '_ ` _ \ ~
                  | | | | |  _| (_) \ V /| | | | | | |~
                  |_|_| |_|_|  \___(_)_/ |_|_| |_| |_|~


Version: 0.1.0
Author: Alejandro "HiPhish" Sanchez
License: MIT License


==============================================================================
TABLE OF CONTENTS                                              *info-contents*

    1. Introduction ..................................... |info-introduction|
    2. Setup and Configuration .......................... |info-configuration|
    3. Variables ........................................ |info-variables|
    4. Key mappings ..................................... |info-keymaps|
    5. Commands ......................................... |info-commands|
    6. Functions ........................................ |info-functions|
    7. Advanced ......................................... |info-advanced|


==============================================================================
INTRODUCTION                                               *info-introduction*

*Info.vim* provides basic file type support for info files,  as well  as an info
document browser. You can open any info file and browse its nodes as you could
in the standalone command-line program or Emacs's info mode.

Note  Info.vim is still very early work; it is feature-complete but you should
      consider it to be "wet paint" at this point.

You can read the info document for a topic like `bash` by executing `:Info`:
>
    :Info bash
<
An alternative way  of loading an info document  is to give an |info-uri| as the
file name:
>
    :edit info://bash
<
You can use your  regular Vim motions to  navigate the buffer,  but since info
documents can get very  large you will want to use node-based navigation.  See
the |info-functions| section for an overview.


==============================================================================
CONFIGURATION                                             *info-configuration*

Info is installed like any other Vim plugin.  After installing you can set the
info binary  for processing  info files via  the |g:infoprg| variable.  You need
at least GNU info version 1.6


==============================================================================
VARIABLES                                                     *info-variables*

g:infoprg                                                          *g:infoprg*
Default: 'info'~

    Name or path to the standalone GNU info program. You need at least version
    6.0, so you can use this variable to override your system's default info.


==============================================================================
KEY MAPPINGS                                                    *info-keymaps*

g?                                                                   *info-g?*

    Print a quick overview of the commands.


==============================================================================
COMMANDS                                                       *info-commands*

:Info {topic} [{node}]                                                 *:Info*

    Open  the  {topic}  document  in  an  info buffer.  `:Info` accepts  command
    |<mods>| such as `:vertical` or `:topleft`. See also |info-uri|.

    If an optional  {node} argument is  given the document  will jump to  that
    node. Keep in mind that spaces have to be escaped:
>
        " Wrong
        :Info bash 'What is Bash?'
        " Correct
        :Info bash What\ is\ Bash?
<

:Menu [{entry}]

    With no argument  open the location  list populated with  the menu entries
    for the  current node.  With an argument  jump to that node.  The argument
    does not have  to be a perfect match,  it only needs to  match at the head
    case-insensitively.

==============================================================================
FUNCTIONS                                                     *info-functions*

info#info({mods}, {topic} [, {node}])                            *info#info()*

    Function equivalent  to `:Info`.  The first  argument is  the |<mods>|  of the
    command, the second one the topic  to look up and the third (optional) one
    is the node to jump to.
    

info#menu({entry})                                               *info#menu()*

    Function equivalent to `:Menu`. The empty string is considered as "none".


info#up()                                                          *info#up()*

    Move one node  upwards in the  current window.  Prints an error message if
    there is no parent node.


info#next()                                                      *info#next()*

    Move to the next sibling node. Prints an error message if there is no next
    node.


info#prev()                                                      *info#prev()*

    Move to the previous sibling node. Prints an error message if there is no
    previous node.


==============================================================================
ADVANCED                                                       *info-advanced*

                                                                    *info-uri*
If an editor  with an info  URI is edited  the document from  the URI  will be
loaded into the  buffer as if it was  opened with `:Info`.  This would allow you
to open a new window and execute
>
    :edit info://bash
<
and have the manual for  the Bourne Again Shell loaded into the buffer.  There
is absolutely no difference between an info buffer loaded like this and by the
use of `:Info`.

It is possible to specify the node as a path following the host of the URI:
>
    :edit info://bash/What%20is%20Bash%3f
<
Note  We have to  percent-encode reserved  characters like space  and question
      mark.

==============================================================================
 tim:tw=78:ts=8:ft=help:norl:
